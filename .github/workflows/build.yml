# 2023-05-01 17:00
name: Build - latest

on:
  workflow_dispatch:
#  push:
#    branches: [ '*' ]
#    tags:
#      - v*
#  pull_request:
#   branches: [ master ]
env:
  NAME: ffmpeg-static
  TAG_NAME: release

jobs:
  build-docker:
    runs-on: ${{ matrix.job.os }}
    container: docker://hhmhh/ffmpeg_build:latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - { name: Linux,   os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { name: Windows, os: ubuntu-latest, target: x86_64-w64-mingw32       }
        include:
        - name: Linux
          install-deps: |
            sudo apt update
            sudo apt install yasm make automake autoconf git pkg-config libtool nasm mercurial cmake -y
          package-file: ${{ env.NAME }}-${{ matrix.job.name }}-${{ matrix.job.target }}.zip
          #package-cmd: cd dist && zip -r ${{ env.NAME }}-${{ matrix.job.name }}-${{ matrix.job.target }}.zip .
          package-cmd: cd dist && zip -r $package-file .
        - name: Windows
          install-deps: |
            sudo apt update
            sudo apt install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 yasm make automake autoconf git pkg-config libtool nasm mercurial cmake -y
          package-file: ${{ env.NAME }}-${{ matrix.job.name }}-${{ matrix.job.target }}.zip
          #package-cmd: cd dist && zip -r ${{ env.NAME }}-${{ matrix.job.name }}-${{ matrix.job.target }}.zip .
          package-cmd: cd dist && zip -r $package-file .
          
    steps:
    - uses: actions/checkout@v2

    - name: Download deps
      shell: bash
      run: |
        ${{ matrix.install-deps }}
        ./download.sh

    - name: Build
      shell: bash
      run: |
        ./build.sh ${{ matrix.job.target }}

    - name: Debug
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: debug
        path: .

    - name: Package
      shell: bash
      run: |
        cd dist
        ${{ matrix.package-cmd }}

    - name: Publish
      uses: softprops/action-gh-release@v1
      # if: startsWith(github.ref, 'refs/tags/')
      with:
          tag_name: ${{ env.TAG_NAME }}      
          draft: true          
          files: |
            ${{ matrix.job.name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { name: MacOS,   os: macOS-latest, target: x86_64-w64 }
          #- { name: Windows, os: windows-latest, target: x86_64-w64-mingw32       }
        include:
        - name: MacOS
          install-deps: |
             brew install nasm
          package-file: ${{ env.NAME }}-${{ matrix.job.name }}-${{ matrix.job.target }}.zip
          package-cmd: cd dist && zip -r ${{ env.NAME }}-${{ matrix.job.name }}-${{ matrix.job.target }}.zip .
#        - name: Windows
#          install-deps: |
#             curl -LO https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/win64/nasm-2.15.05-win64.zip
#             7z x nasm-2.15.05-win64.zip
#             cp nasm-2.15.05/nasm.exe /usr/bin/nasm.exe
#             rm /usr/bin/link.exe
#          package-cmd: cd dist && 7z a ${{ env.NAME }}-${{ matrix.job.name }}-${{ matrix.job.target }}.zip .
#          package-file: Windows.zip
    steps:
    - uses: actions/checkout@v2

    - name: Download deps
      shell: bash
      run: |
        ${{ matrix.install-deps }}
        ./download.sh

    - uses: ilammy/msvc-dev-cmd@v1

    - name: Build
      shell: bash
      run: |
        ./build.sh

    - name: Debug
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: debug
        path: .

    - name: Package
      shell: bash
      run: |
        ${{ matrix.package-cmd }}

    - name: Publish
      uses: deep-soft/action-gh-release@v1
      # if: startsWith(github.ref, 'refs/tags/')
      with:
          draft: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            ${{ matrix.package-file }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
